// <auto-generated/>

//------------------------------------------------------------------------------------------------
//      This file has been programatically generated; DONÂ´T EDIT!
//------------------------------------------------------------------------------------------------

#pragma warning disable SA1001
#pragma warning disable SA1027
#pragma warning disable SA1028
#pragma warning disable SA1121
#pragma warning disable SA1205
#pragma warning disable SA1309
#pragma warning disable SA1402
#pragma warning disable SA1505
#pragma warning disable SA1507
#pragma warning disable SA1508
#pragma warning disable SA1652

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Numerics;
using System.Text.Json;

namespace SharpGLTF.Schema2
{
	using Collections;

	/// <summary>
	/// `EXT_mesh_features` extension for a primitive in a glTF model, to associate it with the root `EXT_mesh_features` object.
	/// </summary>
	partial class PrimitiveExtMeshFeatures : ExtraProperties
	{
	
		private const int _featureIdsMinItems = 1;
		private List<Object> _featureIds;
		
		private const int _propertyTablesMinItems = 1;
		private List<Int32> _propertyTables;
		
		private const int _propertyTexturesMinItems = 1;
		private List<Int32> _propertyTextures;
		
	
		protected override void SerializeProperties(Utf8JsonWriter writer)
		{
			base.SerializeProperties(writer);
			SerializeProperty(writer, "featureIds", _featureIds, _featureIdsMinItems);
			SerializeProperty(writer, "propertyTables", _propertyTables, _propertyTablesMinItems);
			SerializeProperty(writer, "propertyTextures", _propertyTextures, _propertyTexturesMinItems);
		}
	
		protected override void DeserializeProperty(string jsonPropertyName, ref Utf8JsonReader reader)
		{
			switch (jsonPropertyName)
			{
				case "featureIds": DeserializePropertyList<Object>(ref reader, _featureIds); break;
				case "propertyTables": DeserializePropertyList<Int32>(ref reader, _propertyTables); break;
				case "propertyTextures": DeserializePropertyList<Int32>(ref reader, _propertyTextures); break;
				default: base.DeserializeProperty(jsonPropertyName,ref reader); break;
			}
		}
	
	}

}
